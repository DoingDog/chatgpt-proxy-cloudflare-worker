const myopenaikeys = ["Bearer sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"],
  mykamiyatokens = ["not set"],
  myapipasswords = ["Bearer 11111111"];

addEventListener("fetch",e=>{e.respondWith(handleRequest(e.request).catch(({stack:e})=>new Response(e,{headers:{"Content-Type":"text/plain;charset=utf8","Access-Control-Allow-Origin":"*"},status:500})))});async function handleRequest(e){if(e.url===`${new URL(e.url).origin}/`){let t={};for(let[a,n]of e.headers.entries())t[a]=n;let s={url:e.url,method:e.method,headers:t};return new Response(JSON.stringify(s,null,2),{headers:{"Content-Type":"text/plain","Access-Control-Allow-Origin":"*","Access-Control-Allow-Headers":"*"}})}function r(e){let t={"Content-Type":"text/plain;charset=utf8","Access-Control-Allow-Origin":"*","Access-Control-Allow-Headers":"*"};switch(e){case 400:return new Response("400 Bad Request",{headers:t,status:400});case 401:return new Response("401 Unauthorized",{headers:t,status:401});case 403:return new Response("403 Forbidden",{headers:t,status:403});case 404:return new Response("404 Not Found",{headers:t,status:404});case 405:return new Response("405 Method Not Allowed",{headers:t,status:405});case 408:return new Response("408 Request Timeout",{headers:t,status:408});case 410:return new Response("410 Gone",{headers:t,status:410});case 413:return new Response("413 Payload Too Large",{headers:t,status:413});case 429:return new Response("429 Too Many Requests",{headers:t,status:429});case 500:return new Response("500 Internal Server Error",{headers:t,status:500});case 502:return new Response("502 Bad Gateway",{headers:t,status:502});case 503:return new Response("503 Service Unavailable",{headers:t,status:503});default:return null}}if("POST"!==e.method&&"GET"!==e.method&&"OPTIONS"!==e.method)return r(405);let o=new URL(e.url),i=e.headers.get("Access-Control-Allow-Origin")||"*",h=["completions","generations","transcriptions","edits","embeddings","translations","variations","files","fine-tunes","moderations"],l=await e.clone().text(),c=o.pathname.split("?")[0].split("/").pop(),u=myopenaikeys[Math.floor(Math.random()*myopenaikeys.length)],p=mykamiyatokens[Math.floor(Math.random()*mykamiyatokens.length)];if(h.includes(c)&&("POST"===e.method||"GET"===e.method)){let d=e.headers.get("Authorization");if(!d)return r(401);myapipasswords.includes(d)||(u=d,p=d)}else if(!h.includes(c)&&!["usage","login","getDetails"].includes(c))return r(403);let m=Object.fromEntries(e.headers);switch(Object.assign(m,{"user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 13_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36","sec-ch-ua":'"Chromium";v="116", "Google Chrome";v="116", "Not:A-Brand";v="99"',"sec-ch-ua-mobile":"?0","sec-ch-ua-platform":'"macOS"',"sec-fetch-dest":"empty","sec-fetch-mode":"cors","sec-fetch-site":"same-site",Pragma:"no-cache","Cache-Control":"no-cache"}),!0){case o.pathname.startsWith("/openai"):case o.pathname.startsWith("/v1"):o.host="api.openai.com",o.pathname=o.pathname.replace(/^\/openai\//,"/"),Object.assign(m,{authorization:u,"content-type":"application/json",origin:"https://bettergpt.chat",referer:"https://bettergpt.chat/",authority:o.host});break;case o.pathname.startsWith("/churchless"):o.host="free.churchless.tech",o.pathname=o.pathname.replace(/^\/churchless\//,"/"),Object.assign(m,{authorization:"Bearer sk-none","content-type":"application/json",origin:"https://acheong08.github.io",referer:"https://acheong08.github.io/",authority:o.host});break;case o.pathname.startsWith("/kamiya"):o.host="fastly-k1.kamiya.dev",o.pathname=o.pathname.replace(/^\/kamiya\//,"/"),o.pathname=o.pathname.replace(/^\/v1\//,"/api/openai/"),Object.assign(m,{authorization:p,"content-type":"application/json",origin:"https://chat.kamiya.dev",referer:"https://chat.kamiya.dev/",authority:o.host,path:"/api/openai/chat/completions"});break;case o.pathname.startsWith("/kmyalogin"):o.host="fastly-k1.kamiya.dev",o.pathname=o.pathname.replace(/^\/kmyalogin\//,"/"),Object.assign(m,{authorization:p,"content-type":"application/json",origin:"https://www.kamiya.dev",referer:"https://www.kamiya.dev/",authority:o.host});break;default:return r(404)}let $=new Headers;for(let[g,w]of Object.entries(m))$.append(g,w);let f=new Request(o.toString(),{headers:$,body:e.body,method:e.method,redirect:"follow"});if("POST"===e.method&&o.pathname.endsWith("/completions")&&l){let y=await JSON.parse(l),_=y.messages,b=_[_.length-1],k=b.content,A=_[_.length-3],v="";if(A&&(v=A.content),k.includes("WS[")||v.includes("WS[")){let C=[];function S(e,t){let a=0,n=e.match(/WS\[[^\]]+\]/g);if(n)for(let s of n){let r=s.slice(3,-1);a<2&&(t.push(r),a++)}return null}if(S(k,C),v&&S(v,C),C.length>=1){let T=[],O=C.length<=2?10:5;for(let W of C)try{let q=await fetch(`https://api-ddg.iii.hair/search?q=${W}&max_results=${O}`),j=await q.json(),z=j.map(({title:e,body:t,href:a})=>`'${e}' : ${t} ; (${a})`).join("\n");T.push(`

[${W}]
${z}`)}catch(G){try{let P=await fetch(`https://ddg-api.herokuapp.com/search?query=${W}&limit=${O}`),M=await P.json(),x=M.map(({title:e,snippet:t,link:a})=>`'${e}' : ${t} ; (${a})`).join("\n");T.push(`

[${W}]
${x}`)}catch(B){return r(502)}}b.content=`${k.replace(/WS\[[^\]]*\]/g,"")}

Current date:${new Date().toLocaleString()} UTC

Instructions: Answer me in the language used in my request or question above. Answer the questions or requests I made above in a comprehensive way. Below are some web search results. Use them if you need.
${T}`,y.messages[_.length-1]=b,f=new Request(f,{body:JSON.stringify(y)})}}}try{let E=await fetch(f),I=new Response(E.body,E),R=r(I.status);if(("POST"===e.method||"GET"===e.method)&&o.pathname.endsWith("/completions")&&R)return R;return I.headers.set("Access-Control-Allow-Origin",i),I}catch(N){return r(502)}}
