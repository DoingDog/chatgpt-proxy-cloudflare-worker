const myopenaikeys = ["Bearer sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"],
  mykamiyatokens = ["not set"],
  myapipasswords = ["Bearer 11111111"];

addEventListener("fetch",e=>{e.respondWith(handleRequest(e.request).catch(({stack:e})=>new Response(e,{headers:{"Content-Type":"text/plain;charset=utf8","Access-Control-Allow-Origin":"*"},status:500})))});async function handleRequest(e){if(e.url===`${new URL(e.url).origin}/`){let t={url:e.url,method:e.method,headers:Object.fromEntries(e.headers),cf:Object.fromEntries(Object.entries(e.cf))};return new Response(JSON.stringify(t,null,2),{headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":"*","Access-Control-Allow-Headers":"*"}})}function a(e){let t={"Content-Type":"text/plain;charset=utf8","Access-Control-Allow-Origin":"*","Access-Control-Allow-Headers":"*"};switch(e){case 400:return new Response("400 Bad Request",{headers:t,status:400});case 401:return new Response("401 Unauthorized",{headers:t,status:401});case 403:return new Response("403 Forbidden",{headers:t,status:403});case 404:return new Response("404 Not Found",{headers:t,status:404});case 405:return new Response("405 Method Not Allowed",{headers:t,status:405});case 408:return new Response("408 Request Timeout",{headers:t,status:408});case 410:return new Response("410 Gone",{headers:t,status:410});case 413:return new Response("413 Payload Too Large",{headers:t,status:413});case 429:return new Response("429 Too Many Requests",{headers:t,status:429});case 500:return new Response("500 Internal Server Error",{headers:t,status:500});case 502:return new Response("502 Bad Gateway",{headers:t,status:502});case 503:return new Response("503 Service Unavailable",{headers:t,status:503});default:return null}}if("POST"!==e.method&&"GET"!==e.method&&"OPTIONS"!==e.method)return a(405);let n=new URL(e.url),s=e.headers.get("Access-Control-Allow-Origin")||"*",r=["completions","generations","transcriptions","edits","embeddings","translations","variations","files","fine-tunes","moderations"],o=await e.clone().text(),i=n.pathname.split("?")[0].split("/").pop(),h=myopenaikeys[Math.floor(Math.random()*myopenaikeys.length)],c=mykamiyatokens[Math.floor(Math.random()*mykamiyatokens.length)];if(r.includes(i)&&("POST"===e.method||"GET"===e.method)){let l=e.headers.get("Authorization");if(!l)return a(401);myapipasswords.includes(l)||(h=l,c=l)}else if(!r.includes(i)&&!["usage","login","getDetails"].includes(i))return a(403);let u=Object.fromEntries(e.headers);switch(Object.assign(u,{"user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 13_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36","sec-ch-ua":'"Chromium";v="116", "Google Chrome";v="116", "Not:A-Brand";v="99"',"sec-ch-ua-mobile":"?0","sec-ch-ua-platform":'"macOS"',"sec-fetch-dest":"empty","sec-fetch-mode":"cors","sec-fetch-site":"same-site",Pragma:"no-cache","Cache-Control":"no-cache"}),!0){case n.pathname.startsWith("/openai"):case n.pathname.startsWith("/v1"):n.host="api.openai.com",n.pathname=n.pathname.replace(/^\/openai\//,"/"),Object.assign(u,{authorization:h,"content-type":"application/json",origin:"https://bettergpt.chat",referer:"https://bettergpt.chat/",authority:n.host});break;case n.pathname.startsWith("/churchless"):n.host="free.churchless.tech",n.pathname=n.pathname.replace(/^\/churchless\//,"/"),Object.assign(u,{authorization:"Bearer sk-none","content-type":"application/json",origin:"https://acheong08.github.io",referer:"https://acheong08.github.io/",authority:n.host});break;case n.pathname.startsWith("/kamiya"):n.host="fastly-k1.kamiya.dev",n.pathname=n.pathname.replace(/^\/kamiya\//,"/"),n.pathname=n.pathname.replace(/^\/v1\//,"/api/openai/"),Object.assign(u,{authorization:c,"content-type":"application/json",origin:"https://chat.kamiya.dev",referer:"https://chat.kamiya.dev/",authority:n.host,path:"/api/openai/chat/completions"});break;case n.pathname.startsWith("/kmyalogin"):n.host="fastly-k1.kamiya.dev",n.pathname=n.pathname.replace(/^\/kmyalogin\//,"/"),Object.assign(u,{authorization:c,"content-type":"application/json",origin:"https://www.kamiya.dev",referer:"https://www.kamiya.dev/",authority:n.host});break;default:return a(404)}let p=new Headers;for(let[d,m]of Object.entries(u))p.append(d,m);let $=new Request(n.toString(),{headers:p,body:e.body,method:e.method,redirect:"follow"});if("POST"===e.method&&n.pathname.endsWith("/completions")&&o){let g=await JSON.parse(o),w=g.messages,f=w[w.length-1],y=f.content,_=w[w.length-3],b="";if(_&&(b=_.content),y.includes("WS[")||b.includes("WS[")){let k=[];function A(e,t){let a=0,n=e.match(/WS\[[^\]]+\]/g);if(n)for(let s of n){let r=s.slice(3,-1);a<2&&(t.push(r),a++)}return null}if(A(y,k),b&&A(b,k),k.length>=1){let v=[],C=k.length<=2?10:5;for(let S of k)try{let T=await fetch(`https://api-ddg.iii.hair/search?q=${S}&max_results=${C}`),O=await T.json(),W=O.map(({title:e,body:t,href:a})=>`'${e}' : ${t} ; (${a})`).join("\n");v.push(`

[${S}]
${W}`)}catch(q){try{let j=await fetch(`https://ddg-api.herokuapp.com/search?query=${S}&limit=${C}`),z=await j.json(),E=z.map(({title:e,snippet:t,link:a})=>`'${e}' : ${t} ; (${a})`).join("\n");v.push(`

[${S}]
${E}`)}catch(G){return a(502)}}f.content=`${y.replace(/WS\[[^\]]*\]/g,"")}

Current date:${new Date().toLocaleString()} UTC

Instructions: Answer me in the language used in my request or question above. Answer the questions or requests I made above in a comprehensive way. Below are some web search results. Use them if you need.
${v}`,g.messages[w.length-1]=f,$=new Request($,{body:JSON.stringify(g)})}}}try{let P=await fetch($),M=new Response(P.body,P),B=a(M.status);if(("POST"===e.method||"GET"===e.method)&&n.pathname.endsWith("/completions")&&B)return B;return M.headers.set("Access-Control-Allow-Origin",s),M}catch(I){return a(502)}}
