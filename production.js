addEventListener("fetch",e=>{e.respondWith(handleRequest(e.request).catch(({stack:e})=>new Response(e,{headers:{"Content-Type":"text/plain;charset=utf8","Access-Control-Allow-Origin":"*","Access-Control-Allow-Headers":"*"},status:500})))});async function handleRequest(e){if(e.url===`${new URL(e.url).origin}/`){let t=await e.clone().text(),a={url:e.url,method:e.method,data:t,headers:Object.fromEntries(e.headers),cf:Object.fromEntries(Object.entries(e.cf))};return new Response(JSON.stringify(a,null,2),{headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":"*","Access-Control-Allow-Headers":"*"}})}function n(e){var t;let a={400:"Bad Request",401:"Unauthorized",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",408:"Request Timeout",410:"Gone",413:"Payload Too Large",429:"Too Many Requests",500:"Internal Server Error",502:"Bad Gateway",503:"Service Unavailable"};return a[e]?(t=a[e],new Response(JSON.stringify({error:{message:`${e} ${t}`,code:e}},null,2),{headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":"*","Access-Control-Allow-Headers":"*"},status:e})):null}if("POST"!==e.method&&"GET"!==e.method&&"OPTIONS"!==e.method)return n(405);let s=new URL(e.url),r=["completions","generations","transcriptions","edits","embeddings","translations","variations","files","fine-tunes","moderations"],o=await e.clone().text(),i=s.pathname.split("?")[0].split("/").pop(),h="undefined"!=typeof API_KEY&&""!==API_KEY?API_KEY.split(","):["sk-xxxxxxxxxx"],l="undefined"!=typeof KAMIYA_TOKEN&&""!==KAMIYA_TOKEN?KAMIYA_TOKEN.split(","):["eyxxxx.eyxxxx"],c="undefined"!=typeof PASSWORD&&""!==PASSWORD?PASSWORD.split(","):["cpcw"],p=`Bearer ${h[Math.floor(Math.random()*h.length)]}`,d=`Bearer ${l[Math.floor(Math.random()*l.length)]}`;if(r.includes(i)&&("POST"===e.method||"GET"===e.method)){let u=e.headers.get("Authorization");if(!u)return n(401);let m=u.substring(7);c.includes(m)||(p=u,d=u)}else if(!r.includes(i)&&!["usage","login","getDetails"].includes(i))return n(403);let g=Object.fromEntries(e.headers);switch(Object.assign(g,{"user-agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 13_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36","sec-ch-ua":'"Chromium";v="116", "Google Chrome";v="116", "Not:A-Brand";v="99"',"sec-ch-ua-mobile":"?0","sec-ch-ua-platform":'"macOS"',"sec-fetch-dest":"empty","sec-fetch-mode":"cors","sec-fetch-site":"same-site",Pragma:"no-cache","Cache-Control":"no-cache","content-type":"application/json"}),!0){case s.pathname.startsWith("/openai"):case s.pathname.startsWith("/v1"):s.host="api.openai.com",s.pathname=s.pathname.replace(/^\/openai\//,"/"),Object.assign(g,{authorization:p,origin:"https://bettergpt.chat",referer:"https://bettergpt.chat/",authority:s.host});break;case s.pathname.startsWith("/churchless"):s.host="free.churchless.tech",s.pathname=s.pathname.replace(/^\/churchless\//,"/"),Object.assign(g,{origin:"https://acheong08.github.io",referer:"https://acheong08.github.io/",authority:s.host});break;case s.pathname.startsWith("/kamiya"):s.host="fastly-k1.kamiya.dev",s.pathname=s.pathname.replace(/^\/kamiya\//,"/"),s.pathname=s.pathname.replace(/^\/v1\//,"/api/openai/"),Object.assign(g,{authorization:d,origin:"https://chat.kamiya.dev",referer:"https://chat.kamiya.dev/",authority:s.host,path:"/api/openai/chat/completions"});break;case s.pathname.startsWith("/kmyalogin"):s.host="fastly-k1.kamiya.dev",s.pathname=s.pathname.replace(/^\/kmyalogin\//,"/"),Object.assign(g,{authorization:d,origin:"https://www.kamiya.dev",referer:"https://www.kamiya.dev/",authority:s.host});break;default:return n(404)}let f=new Headers;Object.entries(g).forEach(([e,t])=>{f.append(e,t)});let y;try{y=new Request(s.toString(),{headers:f,body:e.body,method:e.method,redirect:"follow"})}catch(w){return n(400)}if("POST"===e.method&&s.pathname.endsWith("/completions")&&o)try{let $=JSON.parse(o),A=$.messages,x=A[A.length-1],b=x.content,v=A[A.length-3]?.content||"";if(b.includes("WS[")||v.includes("WS[")){let k=[];function C(e,t){let a=0,n=e.match(/WS\[[^\]]+\]/g);return n&&n.forEach(e=>{let n=e.slice(3,-1);a<2&&(t.push(n),a++)}),null}if(C(b,k),v&&C(v,k),k.length>=1){let _=[],S=k.length<=2?10:5;for(let T of k)try{let O=await fetch(`https://api-ddg.iii.hair/search?q=${T}&max_results=${S}`),W=await O.json(),q=W.map(({title:e,body:t,href:a})=>`'${e}' : ${t} ; (${a})`).join("\n");_.push(`

[${T}]
${q}`)}catch(E){try{let G=await fetch(`https://ddg-api.herokuapp.com/search?query=${T}&limit=${S}`),j=await G.json(),P=j.map(({title:e,snippet:t,link:a})=>`'${e}' : ${t} ; (${a})`).join("\n");_.push(`

[${T}]
${P}`)}catch(z){return n(502)}}x.content=`${b.replace(/WS\[[^\]]*\]/g,"")}

Current date:${new Date().toLocaleString()} UTC

Instructions: Reply to me in the language of my request or question above. Give a comprehensive answer to the question or request I have made above. Below are some results from a web search. Use them if necessary.
${_}`,$.messages[A.length-1]=x,y=new Request(y,{body:JSON.stringify($)})}}}catch(B){return n(400)}try{let H=await fetch(y),M=n(H.status);if(("POST"===e.method||"GET"===e.method)&&s.pathname.endsWith("/completions")&&M)return M;let R=new Response(H.body,H);return R.headers.set("Access-Control-Allow-Origin",e.headers.get("Access-Control-Allow-Origin")||"*"),R.headers.set("Access-Control-Allow-Headers",e.headers.get("Access-Control-Allow-Headers")||"*"),R}catch(I){return n(502)}}
